apiVersion: apps/v1
kind: Deployment
metadata:
  name: yottamgweb-deploy
  labels:
    app: yottamgweb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yottamgweb
  template:
    metadata:
      labels:
        app: yottamgweb
    spec:
      containers:
      - name: yottamgweb
        image: docker.io/ramb0/yotta-mgweb:latest
        command: ["/bin/bash"]
        args: ["-c","/home/entrypoint/entrypoint.sh"]
        env:
        - name: glbviewport
          value: "8001"
        - name: glbviewadd
          value: "localhost"
        - name: ydb_gbldir
          value: "/opt/yottadb/yottadb.gld"
        ports:
        - containerPort: 8080
        - containerPort: 8001
        volumeMounts:
        - mountPath: "/home/project"
          name: demovol
        - mountPath: "/opt/yottadb"
          name: yottavol
        - mountPath: "/home/git"
          name: gitvol
      initContainers:
      - name: init-yottamgweb
        image: bitnami/git
        command: ['/bin/bash', '-c', "cd /home/git && if test -d /home/git/YottaDB-Demo;then rm -Rf /home/git/YottaDB-Demo;fi && git clone -b git https://github.com/RamSailopal/YottaDB-Demo.git"]
        volumeMounts:
        - mountPath: "/home/git"
          name: gitvol
      volumes:
      - name: demovol
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: yottavol
        persistentVolumeClaim:
          claimName: yotta-pvc
      - name: gitvol
        persistentVolumeClaim:
          claimName: git-pvc
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ide-deployment
  labels:
    app: ide
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ide
  template:
    metadata:
      labels:
        app: ide
    spec:
      containers:
      - name: ide
        image: docker.io/ramb0/theia-mumps:latest
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: "/home/project"
          name: demovol
        - mountPath: "/home/yottadb-settings"
          name: settings
        - mountPath: "/root/.ssh"
          name: ssh
        - mountPath: "/home/theia/.theia"
          name: theia
        - mountPath: "/home/git"
          name: gitvol
      initContainers:
      - name: init-ide
        image: bitnami/git
        command: ['/bin/bash', '-c', "cd /home/git && if test -d /home/git/YottaDB-Demo;then rm -Rf /home/git/YottaDB-Demo;fi && git clone -b git https://github.com/RamSailopal/YottaDB-Demo.git"]
        volumeMounts:
        - mountPath: "/home/git"
          name: gitvol
      volumes:
      - name: demovol
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: gitvol
        persistentVolumeClaim:
          claimName: git-pvc
      - name: ssh
        hostPath:
          path: /usr/local/YottaDB-Demo/.ssh
      - name: settings
        hostPath:
          path: /usr/local/YottaDB-Demo/project
      - name: theia
        hostPath:
          path: /usr/local/YottaDB-Demo/Kubernetes/.theia
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase-deployment
  labels:
    app: metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metabase
  template:
    metadata:
      labels:
        app: metabase
    spec:
      containers:
      - name: metabase
        image: docker.io/huksley/metabase
        command: ["/bin/bash"]
        args: ["-c","/home/entrypoint/entrypoint.sh"]
        env:
        - name: MB_DB_FILE
          value: "/home/metabase/metabase.db"
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: "/home/metabase"
          name: metabase
        - mountPath: "/home/entrypoint"
          name: entrypoint
      volumes:
      - name: metabase
        hostPath:
          path: /usr/local/YottaDB-Demo/metabase
      - name: entrypoint
        hostPath:
          path: /usr/local/YottaDB-Demo/Kubernetes/metaentry
