apiVersion: apps/v1
kind: Deployment
metadata:
  name: yottamgweb-deploy
  labels:
    app: yottamgweb
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yottamgweb
  template:
    metadata:
      labels:
        app: yottamgweb
    spec:
      containers:
      - name: yottamgweb
        image: docker.io/ramb0/yotta-mgweb:latest
        command: ["/bin/bash"]
        args: ["-c","/home/entrypoint/entrypoint.sh"]
        env:
        - name: glbviewport
          value: "8001"
        - name: glbviewadd
          value: "$glbviewadd"
        - name: ydb_gbldir
          value: "/opt/yottadb/yottadb.gld"
        ports:
        - containerPort: 8080
        volumeMounts:
        - mountPath: "/home/project"
          name: demovol
        - mountPath: "/root/.ssh"
          name: ssh
        - mountPath: "/etc/lsyncd.conf"
          name: lsync
        - mountPath: "/home/footie"
          name: footie
        - mountPath: "/home/entrypoint"
          name: entrypoint
        - mountPath: "/opt/mgweb/mapped"
          name: mgweb
      volumes:
      - name: demovol
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: ssh
        hostPath:
          path: /usr/local/Yottadb-Demo/.ssh
      - name: lsync
        hostPath:
          path: /usr/local/Yottadb-Demo/lsyncd/lysncd.conf
      - name: footie
        hostPath:
          path: /usr/local/Yottadb-Demo/EnglishFootball
      - name: entrypoint
        hostPath:
          path: /usr/local/Yottadb-Demo/entrypoint
      - name: mgweb
        hostPath:
          path: /usr/local/Yottadb-Demo/mapped
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: yottaglobal-deploy
  labels:
    app: yottaglobal
spec:
  replicas: 2
  selector:
    matchLabels:
      app: yottaglobal
  template:
    metadata:
      labels:
        app: yottaglobal
    spec:
      containers:
      - name: yottaglobal
        image: docker.io/ramb0/yotta-mgweb:latest
        command: ["/bin/bash"]
        args: ["-c","/home/entrypoint/entrypoint.sh"]
        env:
        - name: glbviewport
          value: "8001"
        - name: glbviewadd
          value: "$glbviewadd"
        - name: ydb_gbldir
          value: "/opt/yottadb/yottadb.gld"
        ports:
        - containerPort: 8001
        volumeMounts:
        - mountPath: "/home/project"
          name: demovol
        - mountPath: "/root/.ssh"
          name: ssh
        - mountPath: "/etc/lsyncd.conf"
          name: lsync
        - mountPath: "/home/footie"
          name: footie
        - mountPath: "/home/entrypoint"
          name: entrypoint
        - mountPath: "/opt/mgweb/mapped"
          name: mgweb
      volumes:
      - name: demovol
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: ssh
        hostPath:
          path: /usr/local/Yottadb-Demo/.ssh
      - name: lsync
        hostPath:
          path: /usr/local/Yottadb-Demo/lsyncd/lysncd.conf
      - name: footie
        hostPath:
          path: /usr/local/Yottadb-Demo/EnglishFootball
      - name: entrypoint
        hostPath:
          path: /usr/local/Yottadb-Demo/entrypoint
      - name: mgweb
        hostPath:
          path: /usr/local/Yottadb-Demo/mapped
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ide-deployment
  labels:
    app: ide
spec:
  replicas: 2
  selector:
    matchLabels:
      app: ide
  template:
    metadata:
      labels:
        app: ide
    spec:
      containers:
      - name: ide
        image: docker.io/ramb0/theia-mumps:latest
        ports:
        - containerPort: 3002
        volumeMounts:
        - mountPath: "/home/project"
          name: demovol
        - mountPath: "/home/yottadb-settings"
          name: settings
        - mountPath: "/root/.ssh"
          name: ssh
        - mountPath: "/home/theia/.theia"
          name: theia
      volumes:
      - name: demovol
        persistentVolumeClaim:
          claimName: demo-pvc
      - name: ssh
        hostPath:
          path: ../.ssh
      - name: settings
        hostPath:
          path: ../project
      - name: theia
        hostPath:
          path: .theia
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: newman-deployment
  labels:
    app: newman
spec:
  replicas: 2
  selector:
    matchLabels:
      app: newman
  template:
    metadata:
      labels:
        app: newman
    spec:
      containers:
      - name: newman
        image: docker.io/ramb0/newman-ssh
        volumeMounts:
        - mountPath: "/root/.ssh"
          name: ssh
        - mountPath: "/home/newman"
          name: newman
      volumes:
      - name: ssh
        hostPath:
          path: /usr/local/Yottadb-Demo/.ssh
      - name: newman
        hostPath:
          path: /usr/local/Yottadb-Demo/mapped
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase-deployment
  labels:
    app: metabase
spec:
  replicas: 2
  selector:
    matchLabels:
      app: metabase
  template:
    metadata:
      labels:
        app: metabase
    spec:
      containers:
      - name: metabase
        image: docker.io/huksley/metabase
        env:
        - name: MB_DB_FILE
          value: "/home/metabase/metabase.db"
        ports:
        - containerPort: 3000
        volumeMounts:
        - mountPath: "/home/metabase"
          name: metabase
      volumes:
      - name: metabase
        hostPath:
          path: /usr/local/Yottadb-Demo/metabase

